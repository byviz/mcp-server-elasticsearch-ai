[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "datadog-mcp"
version = "0.1.0"
description = "Datadog MCP Server using FastMCP 2.0 OpenAPI Integration"
authors = [
    {name = "Datadog MCP Project"}
]
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
dependencies = [
    "fastmcp>=2.0.0",
    "httpx>=0.25.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0.0",
]

[project.scripts]
datadog-mcp = "datadog_mcp.__main__:main"

[tool.hatch.build.targets.wheel]
packages = ["datadog_mcp"]

[tool.hatch.build.targets.wheel.sources]
"datadog_mcp" = "datadog_mcp"

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "mypy>=1.7.0",
    "ruff>=0.1.0",
    "pytest-asyncio>=1.0.0",
    "coverage[toml]>=7.0.0",
    "safety>=3.0.0",
    "bandit>=1.7.0",
    "build>=1.0.0",
]

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "RUF", # Ruff-specific rules
    "PL",  # Pylint
    "PERF", # Performance
]

ignore = [
    "E501",  # Line too long (handled by formatter)
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.ruff.lint.isort]
known-first-party = ["datadog_mcp"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**" = ["S101", "PLR2004"]  # Allow magic values in tests

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true